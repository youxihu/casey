// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CaseyInspectionsColumns holds the columns for the "casey_inspections" table.
	CaseyInspectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "bigintunsigned"}},
		{Name: "timestamp", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "hostname", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(128)"}},
		{Name: "ip", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "os", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "uptime", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(128)"}},
		{Name: "cpu", Type: field.TypeString, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "cpu_load", Type: field.TypeString, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "memory", Type: field.TypeString, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "disk", Type: field.TypeString, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "disk_io", Type: field.TypeString, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "router", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "net_stats", Type: field.TypeString, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "processes", Type: field.TypeInt32, SchemaType: map[string]string{"mysql": "intunsigned"}},
		{Name: "zombie_procs", Type: field.TypeInt32, SchemaType: map[string]string{"mysql": "intunsigned"}},
		{Name: "top_processes", Type: field.TypeString, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "env", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "timestamp"}},
	}
	// CaseyInspectionsTable holds the schema information for the "casey_inspections" table.
	CaseyInspectionsTable = &schema.Table{
		Name:       "casey_inspections",
		Columns:    CaseyInspectionsColumns,
		PrimaryKey: []*schema.Column{CaseyInspectionsColumns[0]},
	}
	// CaseyTriggerColumns holds the columns for the "casey_trigger" table.
	CaseyTriggerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "bigint"}},
		{Name: "executor", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "hostname", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "command", Type: field.TypeString, Size: 2147483647, SchemaType: map[string]string{"mysql": "text"}},
		{Name: "response", Type: field.TypeString, Nullable: true, Size: 2147483647, SchemaType: map[string]string{"mysql": "text"}},
		{Name: "executed_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
	}
	// CaseyTriggerTable holds the schema information for the "casey_trigger" table.
	CaseyTriggerTable = &schema.Table{
		Name:       "casey_trigger",
		Columns:    CaseyTriggerColumns,
		PrimaryKey: []*schema.Column{CaseyTriggerColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CaseyInspectionsTable,
		CaseyTriggerTable,
	}
)

func init() {
	CaseyInspectionsTable.Annotation = &entsql.Annotation{
		Table: "casey_inspections",
	}
	CaseyTriggerTable.Annotation = &entsql.Annotation{
		Table: "casey_trigger",
	}
}
